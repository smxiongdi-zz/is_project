var path = require('path');
var config = {
	module: {
		loaders: [{
			test: /\.jsx?$/,
			loader: 'babel-loader',
			query: {compact: false}
/*            query:
            {
                presets:['es2015', 'react']
            }
*/
		}]
	},
};

var topLevelFolderConfig = Object.assign({}, config, {
	entry: {
		main: path.resolve(__dirname, 'client/react/main.js'),
		app: path.resolve(__dirname, 'client/react/app.js'),
		agent: path.resolve(__dirname, 'client/react/agent.js'),
		middleware: path.resolve(__dirname, 'client/react/middleware.js'),
	},
	output: {
		path: path.resolve(__dirname, 'client/react/'),
		filename: '[name].js'
	}
});
var componentLevelFolderConfig = Object.assign({}, config, {
	entry: {
		articlelist: path.resolve(__dirname, 'client/react/components/articlelist.js'),
		header: path.resolve(__dirname, 'client/react/components/header.js')
	},
	output: {
		path: path.resolve(__dirname, 'client/react/components/'),
		filename: '[name].js'

	}
});
var homeLevelFolderConfig = Object.assign({}, config, {
	entry: {
		banner: path.resolve(__dirname, 'client/react/components/home/banner.js'),
		index: path.resolve(__dirname, 'client/react/components/home/index.js'),
		mainview: path.resolve(__dirname, 'client/react/components/home/mainview.js')
	},
	output: {
		path: path.resolve(__dirname, 'client/react/components/home/'),
		filename: '[name].js'
	}
});

module.exports = [
	topLevelFolderConfig, componentLevelFolderConfig, homeLevelFolderConfig,
];

